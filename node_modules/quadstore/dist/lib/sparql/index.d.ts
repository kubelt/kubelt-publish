import type { Algebra } from 'sparqlalgebrajs';
import type { BindingArrayResult, BindingStreamResult, BooleanResult, QuadArrayResult, QuadStreamResult, SparqlOpts, VoidResult } from '../types';
import type { Quadstore } from '../quadstore';
import type { IQueryEngine } from '@comunica/types';
export declare const sparql: (store: Quadstore, engine: IQueryEngine, query: Algebra.Operation | string, opts?: SparqlOpts) => Promise<BindingArrayResult | QuadArrayResult | VoidResult | BooleanResult>;
export declare const sparqlStream: (store: Quadstore, engine: IQueryEngine, query: Algebra.Operation | string, opts?: SparqlOpts) => Promise<BindingStreamResult | QuadStreamResult | VoidResult | BooleanResult>;
