"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sparqlStream = exports.sparql = void 0;
const types_1 = require("../types");
const utils_1 = require("../utils");
const sparql = async (store, engine, query, opts = utils_1.emptyObject) => {
    const results = await exports.sparqlStream(store, engine, query, opts);
    switch (results.type) {
        case types_1.ResultType.BINDINGS: {
            const items = await utils_1.streamToArray(results.iterator);
            return { ...results, items };
        }
        case types_1.ResultType.QUADS: {
            const items = await utils_1.streamToArray(results.iterator);
            return { ...results, items };
        }
        case types_1.ResultType.BOOLEAN:
            return results;
        case types_1.ResultType.VOID:
            return results;
        default:
            throw new Error(`Unexpected result type "${results.type}"`);
    }
};
exports.sparql = sparql;
const sparqlStream = async (store, engine, query, opts = utils_1.emptyObject) => {
    const results = await engine.query(query, {
        sources: [store],
        source: store,
        baseIRI: opts.baseIRI,
        destination: store,
    });
    switch (results.type) {
        case 'boolean':
            return {
                type: types_1.ResultType.BOOLEAN,
                value: await results.booleanResult,
            };
        case 'bindings':
            return {
                type: types_1.ResultType.BINDINGS,
                iterator: results.bindingsStream.map(binding => binding.toObject()),
                variables: results.variables,
            };
        case 'quads':
            return {
                type: types_1.ResultType.QUADS,
                iterator: results.quadStream,
            };
        case 'update':
            await results.updateResult;
            return {
                type: types_1.ResultType.VOID,
            };
        default:
            throw new Error(`The Comunica engine returned results of unsupported type "${results.type}"`);
    }
};
exports.sparqlStream = sparqlStream;
//# sourceMappingURL=index.js.map