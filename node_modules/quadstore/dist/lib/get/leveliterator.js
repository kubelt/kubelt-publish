"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LevelIterator = void 0;
const asynciterator_1 = require("asynciterator");
class LevelIterator extends asynciterator_1.BufferedIterator {
    constructor(levelIterator, mapper) {
        super();
        this.mapFn = mapper;
        this.level = levelIterator;
        this.levelEnded = false;
    }
    _read(qty, done) {
        const loop = (remaining) => {
            if (remaining === 0) {
                done();
                return;
            }
            this.level.next((err, key, value) => {
                this.onNextValue(err, key, value, remaining, loop, done);
            });
        };
        loop(qty);
    }
    onNextValue(err, key, value, remaining, loop, done) {
        if (err) {
            done(err);
            return;
        }
        if (key === undefined && value === undefined) {
            this.close();
            this.levelEnded = true;
            done();
            return;
        }
        this._push(this.mapFn(key, value));
        loop(remaining - 1);
    }
    ;
    endLevel(cb) {
        if (this.levelEnded) {
            cb();
            return;
        }
        this.level.end((err) => {
            if (!err) {
                this.levelEnded = true;
            }
            cb(err);
        });
    }
    _end(destroy) {
        if (this.ended) {
            return;
        }
        super._end(destroy);
        this.endLevel((endErr) => {
            if (endErr) {
                this.emit('error', endErr);
            }
        });
    }
    _destroy(cause, cb) {
        if (this.destroyed) {
            cb();
            return;
        }
        this.endLevel((endErr) => {
            if (endErr) {
                cb(endErr);
                return;
            }
            super._destroy(cause, cb);
        });
    }
}
exports.LevelIterator = LevelIterator;
//# sourceMappingURL=leveliterator.js.map