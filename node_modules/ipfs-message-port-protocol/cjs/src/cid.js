'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var cid = require('multiformats/cid');

const encodeCID = (cid, transfer) => {
  if (transfer) {
    transfer.add(cid.multihash.bytes.buffer);
  }
  return cid;
};
const decodeCID = encodedCID => {
  const cid$1 = encodedCID;
  if (!cid$1._baseCache) {
    Object.defineProperty(cid$1, '_baseCache', { value: new Map() });
  }
  if (!cid$1.asCID) {
    Object.defineProperty(cid$1, 'asCID', { get: () => cid$1 });
  }
  Object.setPrototypeOf(cid$1.multihash.digest, Uint8Array.prototype);
  Object.setPrototypeOf(cid$1.multihash.bytes, Uint8Array.prototype);
  Object.setPrototypeOf(cid$1.bytes, Uint8Array.prototype);
  Object.setPrototypeOf(cid$1, cid.CID.prototype);
  Object.defineProperty(cid$1, Symbol.for('@ipld/js-cid/CID'), { value: true });
  return cid$1;
};

exports.decodeCID = decodeCID;
exports.encodeCID = encodeCID;
