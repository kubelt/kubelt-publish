import { CID } from 'multiformats/cid';
import {
  encodeCID,
  decodeCID
} from './cid.js';
export const decodeNode = ({dagNode, cids}) => {
  for (const cid of cids) {
    decodeCID(cid);
  }
  return dagNode;
};
export const encodeNode = (dagNode, transfer) => {
  const cids = [];
  collectNode(dagNode, cids, transfer);
  return {
    dagNode,
    cids
  };
};
const collectNode = (value, cids, transfer) => {
  if (value != null && typeof value === 'object') {
    const cid = CID.asCID(value);
    if (cid) {
      cids.push(cid);
      encodeCID(cid, transfer);
    } else if (value instanceof ArrayBuffer) {
      if (transfer) {
        transfer.add(value);
      }
    } else if (ArrayBuffer.isView(value)) {
      if (transfer) {
        transfer.add(value.buffer);
      }
    } else if (Array.isArray(value)) {
      for (const member of value) {
        collectNode(member, cids, transfer);
      }
    } else {
      for (const member of Object.values(value)) {
        collectNode(member, cids, transfer);
      }
    }
  }
};