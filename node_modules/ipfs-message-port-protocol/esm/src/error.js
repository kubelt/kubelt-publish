export const encodeError = error => {
  const {name, message, stack, code, detail} = error;
  return {
    name,
    message,
    stack,
    code,
    detail
  };
};
export const decodeError = error => {
  if (error instanceof Error) {
    return error;
  } else {
    const {name, message, stack, code} = error;
    return Object.assign(createError(name, message), {
      name,
      stack,
      code
    });
  }
};
const createError = (name, message) => {
  switch (name) {
  case 'RangeError': {
      return new RangeError(message);
    }
  case 'ReferenceError': {
      return ReferenceError(message);
    }
  case 'SyntaxError': {
      return new SyntaxError(message);
    }
  case 'TypeError': {
      return new TypeError(message);
    }
  case 'URIError': {
      return new URIError(message);
    }
  default: {
      return new Error(message);
    }
  }
};