import { CID } from 'multiformats/cid';
export const encodeCID = (cid, transfer) => {
  if (transfer) {
    transfer.add(cid.multihash.bytes.buffer);
  }
  return cid;
};
export const decodeCID = encodedCID => {
  const cid = encodedCID;
  if (!cid._baseCache) {
    Object.defineProperty(cid, '_baseCache', { value: new Map() });
  }
  if (!cid.asCID) {
    Object.defineProperty(cid, 'asCID', { get: () => cid });
  }
  Object.setPrototypeOf(cid.multihash.digest, Uint8Array.prototype);
  Object.setPrototypeOf(cid.multihash.bytes, Uint8Array.prototype);
  Object.setPrototypeOf(cid.bytes, Uint8Array.prototype);
  Object.setPrototypeOf(cid, CID.prototype);
  Object.defineProperty(cid, Symbol.for('@ipld/js-cid/CID'), { value: true });
  return cid;
};