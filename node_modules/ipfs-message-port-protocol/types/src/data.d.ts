export interface JSONObject {
    [key: string]: JSONValue;
}
export declare type JSONArray = JSONValue[];
export declare type JSONValue = null | boolean | number | string | JSONArray | JSONObject;
export declare type Encoded<_Data, Representation> = Representation;
export declare type StringEncoded<T> = Encoded<T, string>;
export declare type Result<X, T> = {
    ok: true;
    value: T;
} | {
    ok: false;
    error: X;
};
export interface EncodedError {
    message: string;
    name: string;
    stack: string;
}
//# sourceMappingURL=data.d.ts.map