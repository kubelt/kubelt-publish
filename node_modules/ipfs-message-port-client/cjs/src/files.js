'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var client = require('./client.js');
var cid$1 = require('ipfs-message-port-protocol/cid');
var cid = require('multiformats/cid');

class FilesClient extends client.Client {
  constructor(transport) {
    super('files', ['stat'], transport);
  }
}
FilesClient.prototype.stat = async function stat(pathOrCID, options = {}) {
  const {size, hash, withLocal, timeout, signal} = options;
  const {stat} = await this.remote.stat({
    path: encodeLocation(pathOrCID),
    size,
    hash,
    withLocal,
    timeout,
    signal
  });
  return decodeStat(stat);
};
const encodeLocation = pathOrCID => {
  const cid$1 = cid.CID.asCID(pathOrCID);
  return cid$1 ? `/ipfs/${ pathOrCID.toString() }` : pathOrCID.toString();
};
const decodeStat = data => {
  return {
    ...data,
    cid: cid$1.decodeCID(data.cid)
  };
};

exports.FilesClient = FilesClient;
