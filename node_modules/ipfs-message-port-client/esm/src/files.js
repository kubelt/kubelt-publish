import { Client } from './client.js';
import { decodeCID } from 'ipfs-message-port-protocol/cid';
import { CID } from 'multiformats/cid';
export class FilesClient extends Client {
  constructor(transport) {
    super('files', ['stat'], transport);
  }
}
FilesClient.prototype.stat = async function stat(pathOrCID, options = {}) {
  const {size, hash, withLocal, timeout, signal} = options;
  const {stat} = await this.remote.stat({
    path: encodeLocation(pathOrCID),
    size,
    hash,
    withLocal,
    timeout,
    signal
  });
  return decodeStat(stat);
};
const encodeLocation = pathOrCID => {
  const cid = CID.asCID(pathOrCID);
  return cid ? `/ipfs/${ pathOrCID.toString() }` : pathOrCID.toString();
};
const decodeStat = data => {
  return {
    ...data,
    cid: decodeCID(data.cid)
  };
};