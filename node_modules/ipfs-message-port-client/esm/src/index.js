import { MessageTransport } from './client/transport.js';
import { BlockClient } from './block.js';
import { DAGClient } from './dag.js';
import { CoreClient } from './core.js';
import { FilesClient } from './files.js';
export class IPFSClient extends CoreClient {
  constructor(transport) {
    super(transport);
    this.transport = transport;
    this.dag = new DAGClient(this.transport);
    this.files = new FilesClient(this.transport);
    this.block = new BlockClient(this.transport);
  }
  static attach(self, port) {
    self.transport.connect(port);
  }
  static detached() {
    return new IPFSClient(new MessageTransport(undefined));
  }
  static from(port) {
    return new IPFSClient(new MessageTransport(port));
  }
}